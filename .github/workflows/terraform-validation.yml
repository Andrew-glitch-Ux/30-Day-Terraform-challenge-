name: Terraform Validation

on:
  pull_request:
    branches:
      - 'week*'
    types: [opened, synchronize, reopened]

jobs:
  terraform-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.5.0"

      - name: Check file structure
        run: |
          for tf_file in $(find . -name "*.tf" -type f); do
            if [[ ! $tf_file =~ /Submissions/[^/]+/[^/]+/[^/]+\.tf$ ]]; then
              echo "Error: Invalid file structure for $tf_file"
              echo "Files must be in format: Submissions/<username>/<day>/file.tf"
              exit 1
            fi
          done

      - name: Terraform Format Check
        run: |
          for dir in $(find . -name "*.tf" -type f -exec dirname {} \; | sort -u); do
            echo "Checking format in $dir"
            cd $dir
            terraform fmt -check -recursive
            cd -
          done

      - name: Security Check
        run: |
          for tf_file in $(find . -name "*.tf" -type f); do
            echo "Checking $tf_file for security issues"
            # Check for hardcoded credentials
            if grep -i "access_key\|secret_key\|password\|token" "$tf_file"; then
              echo "Error: Potential hardcoded credentials found in $tf_file"
              exit 1
            fi
            
            # Check for public access
            if grep -i "acl.*=.*public" "$tf_file"; then
              echo "Error: Public access detected in $tf_file"
              exit 1
            fi
            
            # Check for required tags
            if ! grep -i "tags.*=.*{" "$tf_file" > /dev/null; then
              echo "Warning: Missing resource tags in $tf_file"
            fi
          done

      - name: Terraform Init and Validate
        run: |
          for dir in $(find . -name "*.tf" -type f -exec dirname {} \; | sort -u); do
            echo "Validating in $dir"
            cd $dir
            terraform init -backend=false
            terraform validate
            cd -
          done 